<?php
// generated by Symfony (php bin/console make:entity) 
// @author ali-kemal.yalama ( ali-kemal.yalama@iubh.de ) 

namespace App\Repository;

use App\Entity\User;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Persistence\ManagerRegistry;

/**
 * @method User|null find($id, $lockMode = null, $lockVersion = null)
 * @method User|null findOneBy(array $criteria, array $orderBy = null)
 * @method User[]    findAll()
 * @method User[]    findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
 */
class UserRepository extends ServiceEntityRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, User::class);
    }

    public function getAllByRole($role) 
    {
        if ( strlen ( $role ) < 1 ) 
        {
            throw new Exception("Rolle angeben!");
        }
        
        return $this->createQueryBuilder('u')
            ->andWhere('u.ROLES LIKE :role')
            ->setParameter('role', '%'.$role.'%')
            ->getQuery()
            ->getResult();
    }

    // Alle Studenten ausgeben
    public function getAllStudents()
    {
        $role = "ROLE_STUDENT";

        $result = $this->createQueryBuilder('u')
        ->andWhere('u.ROLES LIKE :role')
        ->setParameter('role', '%'.$role.'%')
        ->getQuery()
        ->getResult();
        
        return count($result);
    }

    // Alle Tutoren ausgeben
    public function getAllTutors()
    {
        $role = "ROLE_TUTOR";

        $result = $this->createQueryBuilder('u')
        ->andWhere('u.ROLES LIKE :role')
        ->setParameter('role', '%'.$role.'%')
        ->getQuery()
        ->getResult();
        
        return count($result);
    }

     // Alle Externen ausgeben
     public function getAllExtern()
     {
         $role = "extern";
 
         $result = $this->createQueryBuilder('u')
         ->andWhere('u.ROLES LIKE :role')
         ->setParameter('role', '%'.$role.'%')
         ->getQuery()
         ->getResult();
         
         return count($result);
     }

     // Alle Verwaltung ausgeben
     public function getAllVerwaltung()
     {
         $role = "verwaltung";
 
         $result = $this->createQueryBuilder('u')
         ->andWhere('u.ROLES LIKE :role')
         ->setParameter('role', '%'.$role.'%')
         ->getQuery()
         ->getResult();
         
         return count($result);
     }

     public function getAllUsers() 
     {
         $result = $this ->  findAll();
        
 
         return count($result);
     }

    // /**
    //  * @return User[] Returns an array of User objects
    //  */
    /*
    public function findByExampleField($value)
    {
        return $this->createQueryBuilder('u')
            ->andWhere('u.exampleField = :val')
            ->setParameter('val', $value)
            ->orderBy('u.id', 'ASC')
            ->setMaxResults(10)
            ->getQuery()
            ->getResult()
        ;
    }
    */

    /*
    public function findOneBySomeField($value): ?User
    {
        return $this->createQueryBuilder('u')
            ->andWhere('u.exampleField = :val')
            ->setParameter('val', $value)
            ->getQuery()
            ->getOneOrNullResult()
        ;
    }
    */
}
